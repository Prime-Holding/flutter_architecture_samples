// Mocks generated by Mockito 5.0.17 from annotations
// in rx_bloc_library/test/feature_todo_list/mocks/todo_list_bloc_mock.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rx_bloc/rx_bloc.dart' as _i7;
import 'package:rx_bloc_library/base/models/models.dart' as _i5;
import 'package:rx_bloc_library/feature_todo_list/blocs/todo_list_bloc.dart'
    as _i3;
import 'package:rxdart/rxdart.dart' as _i2;
import 'package:todos_repository_core/todos_repository_core.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeReplayConnectableStream_0<T> extends _i1.Fake
    implements _i2.ReplayConnectableStream<T> {}

class _FakePublishConnectableStream_1<T> extends _i1.Fake
    implements _i2.PublishConnectableStream<T> {}

class _FakeTodoListBlocEvents_2 extends _i1.Fake
    implements _i3.TodoListBlocEvents {}

class _FakeTodoListBlocStates_3 extends _i1.Fake
    implements _i3.TodoListBlocStates {}

/// A class which mocks [TodoListBlocEvents].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoListBlocEvents extends _i1.Mock
    implements _i3.TodoListBlocEvents {
  MockTodoListBlocEvents() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void fetch() => super.noSuchMethod(Invocation.method(#fetch, []),
      returnValueForMissingStub: null);
  @override
  void toggleCompletion(_i4.TodoEntity? todoEntity) =>
      super.noSuchMethod(Invocation.method(#toggleCompletion, [todoEntity]),
          returnValueForMissingStub: null);
  @override
  void toggleCompletionAll() =>
      super.noSuchMethod(Invocation.method(#toggleCompletionAll, []),
          returnValueForMissingStub: null);
  @override
  void delete(_i4.TodoEntity? todo) =>
      super.noSuchMethod(Invocation.method(#delete, [todo]),
          returnValueForMissingStub: null);
  @override
  void deleteAllCompleted() =>
      super.noSuchMethod(Invocation.method(#deleteAllCompleted, []),
          returnValueForMissingStub: null);
  @override
  void create(_i4.TodoEntity? todo) =>
      super.noSuchMethod(Invocation.method(#create, [todo]),
          returnValueForMissingStub: null);
  @override
  void filterBy(_i5.VisibilityFilterModel? filter) =>
      super.noSuchMethod(Invocation.method(#filterBy, [filter]),
          returnValueForMissingStub: null);
}

/// A class which mocks [TodoListBlocStates].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoListBlocStates extends _i1.Mock
    implements _i3.TodoListBlocStates {
  MockTodoListBlocStates() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<Exception> get errors =>
      (super.noSuchMethod(Invocation.getter(#errors),
          returnValue: Stream<Exception>.empty()) as _i6.Stream<Exception>);
  @override
  _i2.ReplayConnectableStream<_i7.Result<List<_i4.TodoEntity>>> get list =>
      (super.noSuchMethod(Invocation.getter(#list),
              returnValue: _FakeReplayConnectableStream_0<
                  _i7.Result<List<_i4.TodoEntity>>>())
          as _i2.ReplayConnectableStream<_i7.Result<List<_i4.TodoEntity>>>);
  @override
  _i6.Stream<_i5.VisibilityFilterModel> get currentFilter =>
      (super.noSuchMethod(Invocation.getter(#currentFilter),
              returnValue: Stream<_i5.VisibilityFilterModel>.empty())
          as _i6.Stream<_i5.VisibilityFilterModel>);
  @override
  _i6.Stream<bool> get allComplete =>
      (super.noSuchMethod(Invocation.getter(#allComplete),
          returnValue: Stream<bool>.empty()) as _i6.Stream<bool>);
  @override
  _i2.PublishConnectableStream<void> get onCompleted =>
      (super.noSuchMethod(Invocation.getter(#onCompleted),
              returnValue: _FakePublishConnectableStream_1<void>())
          as _i2.PublishConnectableStream<void>);
  @override
  _i2.PublishConnectableStream<void> get onAllCompletion =>
      (super.noSuchMethod(Invocation.getter(#onAllCompletion),
              returnValue: _FakePublishConnectableStream_1<void>())
          as _i2.PublishConnectableStream<void>);
  @override
  _i2.PublishConnectableStream<_i4.TodoEntity> get onDeleted =>
      (super.noSuchMethod(Invocation.getter(#onDeleted),
              returnValue: _FakePublishConnectableStream_1<_i4.TodoEntity>())
          as _i2.PublishConnectableStream<_i4.TodoEntity>);
  @override
  _i2.PublishConnectableStream<void> get onCompleteDeleted =>
      (super.noSuchMethod(Invocation.getter(#onCompleteDeleted),
              returnValue: _FakePublishConnectableStream_1<void>())
          as _i2.PublishConnectableStream<void>);
  @override
  _i2.PublishConnectableStream<_i4.TodoEntity> get onAdded =>
      (super.noSuchMethod(Invocation.getter(#onAdded),
              returnValue: _FakePublishConnectableStream_1<_i4.TodoEntity>())
          as _i2.PublishConnectableStream<_i4.TodoEntity>);
}

/// A class which mocks [TodoListBlocType].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoListBlocType extends _i1.Mock implements _i3.TodoListBlocType {
  MockTodoListBlocType() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TodoListBlocEvents get events =>
      (super.noSuchMethod(Invocation.getter(#events),
          returnValue: _FakeTodoListBlocEvents_2()) as _i3.TodoListBlocEvents);
  @override
  _i3.TodoListBlocStates get states =>
      (super.noSuchMethod(Invocation.getter(#states),
          returnValue: _FakeTodoListBlocStates_3()) as _i3.TodoListBlocStates);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}
